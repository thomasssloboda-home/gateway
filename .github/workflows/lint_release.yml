name: Lint et Release

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Super-linter
        uses: super-linter/super-linter@v5.7.2 # x-release-please-version
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILTER_REGEX_INCLUDE: "**/*.py"

  release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configurer Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Installer les dépendances
        run: |
          python -m pip install --upgrade pip
          pip install semantic-release

      - name: Release avec Semantic Release
        run: |
          semantic-release publish

      - name: Capture version number
        id: capture_version
        run: echo "::set-output name=version::$(cat app/_version.py | cut -d "'" -f 2)"

      - name: Envoyer une notification à Slack
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          message: Gateway version {{ steps.capture_version.outputs.version }} released and ready to deploy
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
